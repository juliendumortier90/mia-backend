# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: backend-mia
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    forceExclude:
      - aws-sdk

package:
  excludeDevDependencies: true
  individually: true
  exclude:
    - "./**"
    - "node_modules/**/aws-sdk/**"

plugins:
  - "serverless-webpack"
  - serverless-iam-roles-per-function
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  memorySize: 512
  timeout: 25
  reservedConcurrency: 50
  logRetentionInDays: 14
  iamRoleStatements:
    - Effect: "Allow"
      Action: ["lambda:RemovePermission"]
      Resource: ["arn:aws:lambda:*"]

functions:
  list-feeds:
    handler: src/functions/instagram/list-feeds/index.handler
    iamRoleStatements:
      - Effect: Allow
        Action: ["ssm:GetParameter", "ssm:PutParameter"]
        Resource:
          - "arn:aws:ssm:*:636947615075:parameter/*"
    events:
      - http:
          path: /instagram/list-feeds
          method: get
  insta-oauth:
    handler: src/functions/instagram/authentication/index.handler
    iamRoleStatements:
      - Effect: Allow
        Action: ["ssm:GetParameter", "ssm:PutParameter"]
        Resource:
          - "arn:aws:ssm:*:636947615075:parameter/*"
    events:
      - http:
          path: /instagram/oauth
          method: get
  insta-refreshtoken-job:
    transfer:
    handler: src/functions/instagram/authentication/job.cronHandler
    events: [{ schedule: cron(0 8 1 * ? *) }] # cron(0 8 1 * ? *) every 1st day of month
    iamRoleStatements:
      - Effect: Allow
        Action: ["ssm:GetParameter", "ssm:PutParameter"]
        Resource:
          - "arn:aws:ssm:*:636947615075:parameter/*"
